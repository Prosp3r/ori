// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ori.proto

package ori

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ORIDivideRequest struct {
	A                    float64  `protobuf:"fixed64,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    float64  `protobuf:"fixed64,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ORIDivideRequest) Reset()         { *m = ORIDivideRequest{} }
func (m *ORIDivideRequest) String() string { return proto.CompactTextString(m) }
func (*ORIDivideRequest) ProtoMessage()    {}
func (*ORIDivideRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01698aa773ec568e, []int{0}
}

func (m *ORIDivideRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ORIDivideRequest.Unmarshal(m, b)
}
func (m *ORIDivideRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ORIDivideRequest.Marshal(b, m, deterministic)
}
func (m *ORIDivideRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ORIDivideRequest.Merge(m, src)
}
func (m *ORIDivideRequest) XXX_Size() int {
	return xxx_messageInfo_ORIDivideRequest.Size(m)
}
func (m *ORIDivideRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ORIDivideRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ORIDivideRequest proto.InternalMessageInfo

func (m *ORIDivideRequest) GetA() float64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *ORIDivideRequest) GetB() float64 {
	if m != nil {
		return m.B
	}
	return 0
}

type ORIDivideResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ORIDivideResponse) Reset()         { *m = ORIDivideResponse{} }
func (m *ORIDivideResponse) String() string { return proto.CompactTextString(m) }
func (*ORIDivideResponse) ProtoMessage()    {}
func (*ORIDivideResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01698aa773ec568e, []int{1}
}

func (m *ORIDivideResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ORIDivideResponse.Unmarshal(m, b)
}
func (m *ORIDivideResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ORIDivideResponse.Marshal(b, m, deterministic)
}
func (m *ORIDivideResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ORIDivideResponse.Merge(m, src)
}
func (m *ORIDivideResponse) XXX_Size() int {
	return xxx_messageInfo_ORIDivideResponse.Size(m)
}
func (m *ORIDivideResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ORIDivideResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ORIDivideResponse proto.InternalMessageInfo

func (m *ORIDivideResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type ORISumRequest struct {
	A                    float64  `protobuf:"fixed64,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    float64  `protobuf:"fixed64,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ORISumRequest) Reset()         { *m = ORISumRequest{} }
func (m *ORISumRequest) String() string { return proto.CompactTextString(m) }
func (*ORISumRequest) ProtoMessage()    {}
func (*ORISumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01698aa773ec568e, []int{2}
}

func (m *ORISumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ORISumRequest.Unmarshal(m, b)
}
func (m *ORISumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ORISumRequest.Marshal(b, m, deterministic)
}
func (m *ORISumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ORISumRequest.Merge(m, src)
}
func (m *ORISumRequest) XXX_Size() int {
	return xxx_messageInfo_ORISumRequest.Size(m)
}
func (m *ORISumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ORISumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ORISumRequest proto.InternalMessageInfo

func (m *ORISumRequest) GetA() float64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *ORISumRequest) GetB() float64 {
	if m != nil {
		return m.B
	}
	return 0
}

type ORISumResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ORISumResponse) Reset()         { *m = ORISumResponse{} }
func (m *ORISumResponse) String() string { return proto.CompactTextString(m) }
func (*ORISumResponse) ProtoMessage()    {}
func (*ORISumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01698aa773ec568e, []int{3}
}

func (m *ORISumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ORISumResponse.Unmarshal(m, b)
}
func (m *ORISumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ORISumResponse.Marshal(b, m, deterministic)
}
func (m *ORISumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ORISumResponse.Merge(m, src)
}
func (m *ORISumResponse) XXX_Size() int {
	return xxx_messageInfo_ORISumResponse.Size(m)
}
func (m *ORISumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ORISumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ORISumResponse proto.InternalMessageInfo

func (m *ORISumResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type ORISutractRequest struct {
	A                    float64  `protobuf:"fixed64,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    float64  `protobuf:"fixed64,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ORISutractRequest) Reset()         { *m = ORISutractRequest{} }
func (m *ORISutractRequest) String() string { return proto.CompactTextString(m) }
func (*ORISutractRequest) ProtoMessage()    {}
func (*ORISutractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01698aa773ec568e, []int{4}
}

func (m *ORISutractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ORISutractRequest.Unmarshal(m, b)
}
func (m *ORISutractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ORISutractRequest.Marshal(b, m, deterministic)
}
func (m *ORISutractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ORISutractRequest.Merge(m, src)
}
func (m *ORISutractRequest) XXX_Size() int {
	return xxx_messageInfo_ORISutractRequest.Size(m)
}
func (m *ORISutractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ORISutractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ORISutractRequest proto.InternalMessageInfo

func (m *ORISutractRequest) GetA() float64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *ORISutractRequest) GetB() float64 {
	if m != nil {
		return m.B
	}
	return 0
}

type ORIMultiplyResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ORIMultiplyResponse) Reset()         { *m = ORIMultiplyResponse{} }
func (m *ORIMultiplyResponse) String() string { return proto.CompactTextString(m) }
func (*ORIMultiplyResponse) ProtoMessage()    {}
func (*ORIMultiplyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01698aa773ec568e, []int{5}
}

func (m *ORIMultiplyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ORIMultiplyResponse.Unmarshal(m, b)
}
func (m *ORIMultiplyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ORIMultiplyResponse.Marshal(b, m, deterministic)
}
func (m *ORIMultiplyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ORIMultiplyResponse.Merge(m, src)
}
func (m *ORIMultiplyResponse) XXX_Size() int {
	return xxx_messageInfo_ORIMultiplyResponse.Size(m)
}
func (m *ORIMultiplyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ORIMultiplyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ORIMultiplyResponse proto.InternalMessageInfo

func (m *ORIMultiplyResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type ORIMultiplyRequest struct {
	A                    float64  `protobuf:"fixed64,1,opt,name=a,proto3" json:"a,omitempty"`
	B                    float64  `protobuf:"fixed64,2,opt,name=b,proto3" json:"b,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ORIMultiplyRequest) Reset()         { *m = ORIMultiplyRequest{} }
func (m *ORIMultiplyRequest) String() string { return proto.CompactTextString(m) }
func (*ORIMultiplyRequest) ProtoMessage()    {}
func (*ORIMultiplyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_01698aa773ec568e, []int{6}
}

func (m *ORIMultiplyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ORIMultiplyRequest.Unmarshal(m, b)
}
func (m *ORIMultiplyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ORIMultiplyRequest.Marshal(b, m, deterministic)
}
func (m *ORIMultiplyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ORIMultiplyRequest.Merge(m, src)
}
func (m *ORIMultiplyRequest) XXX_Size() int {
	return xxx_messageInfo_ORIMultiplyRequest.Size(m)
}
func (m *ORIMultiplyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ORIMultiplyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ORIMultiplyRequest proto.InternalMessageInfo

func (m *ORIMultiplyRequest) GetA() float64 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *ORIMultiplyRequest) GetB() float64 {
	if m != nil {
		return m.B
	}
	return 0
}

type ORISutractResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ORISutractResponse) Reset()         { *m = ORISutractResponse{} }
func (m *ORISutractResponse) String() string { return proto.CompactTextString(m) }
func (*ORISutractResponse) ProtoMessage()    {}
func (*ORISutractResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_01698aa773ec568e, []int{7}
}

func (m *ORISutractResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ORISutractResponse.Unmarshal(m, b)
}
func (m *ORISutractResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ORISutractResponse.Marshal(b, m, deterministic)
}
func (m *ORISutractResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ORISutractResponse.Merge(m, src)
}
func (m *ORISutractResponse) XXX_Size() int {
	return xxx_messageInfo_ORISutractResponse.Size(m)
}
func (m *ORISutractResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ORISutractResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ORISutractResponse proto.InternalMessageInfo

func (m *ORISutractResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*ORIDivideRequest)(nil), "ori.ORIDivideRequest")
	proto.RegisterType((*ORIDivideResponse)(nil), "ori.ORIDivideResponse")
	proto.RegisterType((*ORISumRequest)(nil), "ori.ORISumRequest")
	proto.RegisterType((*ORISumResponse)(nil), "ori.ORISumResponse")
	proto.RegisterType((*ORISutractRequest)(nil), "ori.ORISutractRequest")
	proto.RegisterType((*ORIMultiplyResponse)(nil), "ori.ORIMultiplyResponse")
	proto.RegisterType((*ORIMultiplyRequest)(nil), "ori.ORIMultiplyRequest")
	proto.RegisterType((*ORISutractResponse)(nil), "ori.ORISutractResponse")
}

func init() { proto.RegisterFile("ori.proto", fileDescriptor_01698aa773ec568e) }

var fileDescriptor_01698aa773ec568e = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0x86, 0x5d, 0x0b, 0x51, 0x07, 0x15, 0x9d, 0x62, 0x0c, 0x39, 0xc9, 0x9e, 0x0a, 0xd5, 0x58,
	0xf4, 0x24, 0x08, 0x5e, 0xbc, 0xe4, 0x20, 0x81, 0xcd, 0x2f, 0x48, 0xea, 0x1e, 0x16, 0x52, 0x37,
	0xee, 0x47, 0xc1, 0x7f, 0xee, 0x51, 0xf2, 0xb1, 0xdb, 0x36, 0x05, 0xd3, 0xe3, 0x4c, 0x9e, 0x79,
	0x32, 0xbc, 0xb3, 0x70, 0x26, 0x95, 0x48, 0x6a, 0x25, 0x8d, 0xc4, 0x89, 0x54, 0x82, 0x26, 0x70,
	0x95, 0xb1, 0xf4, 0x5d, 0xac, 0xc5, 0x27, 0x67, 0xfc, 0xdb, 0x72, 0x6d, 0xf0, 0x1c, 0x48, 0x11,
	0x91, 0x3b, 0x32, 0x23, 0x8c, 0x14, 0x4d, 0x55, 0x46, 0xc7, 0x5d, 0x55, 0xd2, 0x39, 0x5c, 0x6f,
	0xf1, 0xba, 0x96, 0x5f, 0x9a, 0x63, 0x08, 0x81, 0xe2, 0xda, 0x56, 0xa6, 0x9f, 0xea, 0x2b, 0x3a,
	0x87, 0x8b, 0x8c, 0xa5, 0xb9, 0x5d, 0x1d, 0x62, 0x9e, 0xc1, 0xa5, 0x83, 0x47, 0xb4, 0x8f, 0xed,
	0x0e, 0xb9, 0x35, 0xaa, 0x58, 0x9a, 0x43, 0xd4, 0x0f, 0x30, 0xcd, 0x58, 0xfa, 0x61, 0x2b, 0x23,
	0xea, 0xea, 0x67, 0xd4, 0xbf, 0x00, 0xdc, 0xc1, 0xc7, 0x7f, 0x70, 0xdf, 0x4e, 0xf8, 0x8d, 0xfe,
	0xf7, 0x3f, 0xfd, 0x12, 0x80, 0x06, 0xe7, 0x6a, 0x2d, 0x96, 0x1c, 0x5f, 0x20, 0xe8, 0xf2, 0xc4,
	0x9b, 0xa4, 0xb9, 0xce, 0xf0, 0x1e, 0x71, 0x38, 0x6c, 0x77, 0x7e, 0x7a, 0x84, 0x0b, 0x98, 0xe4,
	0x76, 0x85, 0xe8, 0x80, 0x4d, 0xd4, 0xf1, 0x74, 0xa7, 0xe7, 0x27, 0x5e, 0xe1, 0xa4, 0x5f, 0x13,
	0xc3, 0x0d, 0xb1, 0x9d, 0x64, 0x7c, 0xbb, 0xd7, 0xf7, 0xd3, 0x6f, 0x70, 0xea, 0x62, 0x41, 0x8f,
	0x0d, 0x82, 0x8a, 0xa3, 0xfd, 0x0f, 0x4e, 0x50, 0x06, 0xed, 0xd3, 0x7b, 0xfe, 0x0b, 0x00, 0x00,
	0xff, 0xff, 0xbf, 0x67, 0x6d, 0x76, 0x87, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ORIServiceClient is the client API for ORIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ORIServiceClient interface {
	Divide(ctx context.Context, in *ORIDivideRequest, opts ...grpc.CallOption) (*ORIDivideResponse, error)
	Sum(ctx context.Context, in *ORISumRequest, opts ...grpc.CallOption) (*ORISumResponse, error)
	Sutract(ctx context.Context, in *ORISutractRequest, opts ...grpc.CallOption) (*ORISutractResponse, error)
	Multiply(ctx context.Context, in *ORIMultiplyRequest, opts ...grpc.CallOption) (*ORIMultiplyResponse, error)
}

type oRIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewORIServiceClient(cc grpc.ClientConnInterface) ORIServiceClient {
	return &oRIServiceClient{cc}
}

func (c *oRIServiceClient) Divide(ctx context.Context, in *ORIDivideRequest, opts ...grpc.CallOption) (*ORIDivideResponse, error) {
	out := new(ORIDivideResponse)
	err := c.cc.Invoke(ctx, "/ori.ORIService/Divide", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oRIServiceClient) Sum(ctx context.Context, in *ORISumRequest, opts ...grpc.CallOption) (*ORISumResponse, error) {
	out := new(ORISumResponse)
	err := c.cc.Invoke(ctx, "/ori.ORIService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oRIServiceClient) Sutract(ctx context.Context, in *ORISutractRequest, opts ...grpc.CallOption) (*ORISutractResponse, error) {
	out := new(ORISutractResponse)
	err := c.cc.Invoke(ctx, "/ori.ORIService/Sutract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *oRIServiceClient) Multiply(ctx context.Context, in *ORIMultiplyRequest, opts ...grpc.CallOption) (*ORIMultiplyResponse, error) {
	out := new(ORIMultiplyResponse)
	err := c.cc.Invoke(ctx, "/ori.ORIService/Multiply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ORIServiceServer is the server API for ORIService service.
type ORIServiceServer interface {
	Divide(context.Context, *ORIDivideRequest) (*ORIDivideResponse, error)
	Sum(context.Context, *ORISumRequest) (*ORISumResponse, error)
	Sutract(context.Context, *ORISutractRequest) (*ORISutractResponse, error)
	Multiply(context.Context, *ORIMultiplyRequest) (*ORIMultiplyResponse, error)
}

// UnimplementedORIServiceServer can be embedded to have forward compatible implementations.
type UnimplementedORIServiceServer struct {
}

func (*UnimplementedORIServiceServer) Divide(ctx context.Context, req *ORIDivideRequest) (*ORIDivideResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Divide not implemented")
}
func (*UnimplementedORIServiceServer) Sum(ctx context.Context, req *ORISumRequest) (*ORISumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedORIServiceServer) Sutract(ctx context.Context, req *ORISutractRequest) (*ORISutractResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sutract not implemented")
}
func (*UnimplementedORIServiceServer) Multiply(ctx context.Context, req *ORIMultiplyRequest) (*ORIMultiplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Multiply not implemented")
}

func RegisterORIServiceServer(s *grpc.Server, srv ORIServiceServer) {
	s.RegisterService(&_ORIService_serviceDesc, srv)
}

func _ORIService_Divide_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ORIDivideRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ORIServiceServer).Divide(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ori.ORIService/Divide",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ORIServiceServer).Divide(ctx, req.(*ORIDivideRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ORIService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ORISumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ORIServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ori.ORIService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ORIServiceServer).Sum(ctx, req.(*ORISumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ORIService_Sutract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ORISutractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ORIServiceServer).Sutract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ori.ORIService/Sutract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ORIServiceServer).Sutract(ctx, req.(*ORISutractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ORIService_Multiply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ORIMultiplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ORIServiceServer).Multiply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ori.ORIService/Multiply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ORIServiceServer).Multiply(ctx, req.(*ORIMultiplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ORIService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ori.ORIService",
	HandlerType: (*ORIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Divide",
			Handler:    _ORIService_Divide_Handler,
		},
		{
			MethodName: "Sum",
			Handler:    _ORIService_Sum_Handler,
		},
		{
			MethodName: "Sutract",
			Handler:    _ORIService_Sutract_Handler,
		},
		{
			MethodName: "Multiply",
			Handler:    _ORIService_Multiply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ori.proto",
}
